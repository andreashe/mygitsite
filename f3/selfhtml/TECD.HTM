<html>
<head>
<title>SELFHTML: Perl / Bedingte Anweisungen</title>
</head>
<body bgcolor=#FFFFFF text=#000000 link=#CC6633 vlink=#993300 alink=#6666CC>

<a name="top">&#160;</a>
<table cellpadding=0>
<tr>
<td><img src="xweb.gif" width=106 height=109></td>
<td>
<table>
<tr>
<td><img  src="x2.gif" width=16 height=13 border=0></td>
<td colspan=3><a href="selfhtml.htm"><b>HTML-Dateien selbst erstellen</b></a></td>
</tr>
<tr>
<td></td>
<td><img  src="x2.gif" width=16 height=13 border=0></td>
<td colspan=2><a href="te.htm"><b>Dokumentation: CGI/Perl</b></a></td>
</tr>
<tr>
<td></td>
<td></td>
<td><img  src="x2.gif" width=16 height=13 border=0></td>
<td><a href="tec.htm"><b>CGI und Perl: Perl Sprachelemente</b></a></td>
</tr>
</table>
</td>
</tr>
</table>
<h1><font color=#6666CC>Bedingte Anweisungen</font></h1>
<p>
<hr noshade  size=4 width=50% align=left color=#6666CC>
<p>
<img src="xgdown.gif" width=14 height=10 border=0>&nbsp;<a href="#a1"><b>Bedingte Anweisungen mit if/unless/else/elsif</b></a><br>
<img src="xgdown.gif" width=14 height=10 border=0>&nbsp;<a href="#a2"><b>Einfache Entweder-Oder-Abfrage</b></a><br>
<p>
<hr noshade  size=1 width=50% align=left color=#6666CC>
<p>

<spacer type=vertical size=30>
<a name="a1"><h2><font color=#6666CC>Bedingte Anweisungen mit if/unless/else/elsif</font></h2></a>

Sie k&ouml;nnen die Ausf&uuml;hrung von Anweisungen von Bedingungen abh&auml;ngig machen.

<h4><font color=#6666CC>Komplettbeispiel eines CGI-Scripts in Perl:</font></h4>
<table width=100% cellpadding=10><tr><td bgcolor=#FFFFCC>
<pre>
#!/usr/bin/perl

@Passwords = (&quot;Piesepampel&quot;,&quot;Lederstrumpf&quot;,&quot;Hotzenplotz&quot;);        # Passwortliste

# Einfaches CGI-Script fuer Passwortabfrage                            #
# In der ersten unless-Abfrage wird geprueft, ob die Standard-Eingabe  #
# das Wort 'geheim' enthaelt. Ist das nicht der Fall, wird eine HTML-  #
# Datei mit einem kleinen Formular zur Passworteingabe erzeugt. Beim   #
# Absenden des Formulars wird wieder dieses Script aufgerufen. Da aber #
# nun der Name des Formularfelds fuer das Passwort 'geheim' lautet,    #
# kommt das Script in den else-Zweig. Dort wird geprueft, ob das       #
# eingegebene Wort in der Passwortliste vorkommt.                      #

read(STDIN, $Input, $ENV{'CONTENT_LENGTH'});     # Standard-Eingabe auslesen
unless($Input =~ /geheim/)                       # Wenn 'geheim' darin nicht vorkommt...
 {
  print &quot;Content-type: text/html\n\n&quot;;           # HTTP-Haeder fuer HTML-Datei
  print &quot;&lt;html&gt;&lt;head&gt;&lt;title&gt;Passwort&lt;/title&gt;&lt;/head&gt;\n&quot;;           # HTML-Datei
  print &quot;&lt;body bgcolor=#C0C0C0&gt;&lt;h1&gt;Passwort&lt;/h1&gt;\n&quot;;
  print &quot;&lt;form action=\&quot;\\cgi-bin/test.pl\&quot; method=post&gt;\n&quot;; 
  print &quot;&lt;input type=password name=\&quot;geheim\&quot; maxlength=15 size=15&gt;\n&quot;; 
  print &quot;&lt;input type=submit value=\&quot;Absenden\&quot;&gt;\n&quot;;
  print &quot;&lt;input type=reset value=\&quot;Abbrechen\&quot;&gt;\n&quot;;
  print &quot;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;\n&quot;;
  exit(0);
 }
else                                             # wenn 'geheim' vorkommt...
 {
  print &quot;Content-type: text/html\n\n&quot;;           # HTTP-Haeder fuer HTML-Datei
  print &quot;&lt;html&gt;&lt;head&gt;&lt;title&gt;Passwort&lt;/title&gt;&lt;/head&gt;\n&quot;;           # HTML-Datei
  print &quot;&lt;body bgcolor=#C0C0C0&gt;&lt;h1&gt;Passwort&lt;/h1&gt;\n&quot;;
  ($name, $value) = split(/=/, $Input);   
  for(@Passwords)                                # Passwortliste abklappern
   {
    if($value eq $_)                             # Wenn eingegebener Wert gleich Passwort
     {
      $Erfolg = &quot;ja&quot;;
      last;                                      # for-Schleife abbrechen
     }
    else                                         # Wenn eingegebener Wert ungleich Passwort
     {
      $Erfolg = &quot;nein&quot;;
     }
   }
  if($Erfolg eq &quot;ja&quot;)
   {
    print &quot;&lt;b&gt;Eingeloggt!&lt;/b&gt;\n&quot;; # Hier kann z.B. ein Verweis zu einer geheimen URL folgen
   }
  else
   {
    print &quot;&lt;b&gt;Sorry, Sie haben hier KEINEN Zutritt oder Ihr Passwort falsch eingegeben!&lt;/b&gt;\n&quot;;
   }
  print &quot;&lt;/body&gt;&lt;/html&gt;\n&quot;;
  exit(0);
 }
</pre></td></tr></table><p>

<h4><font color=#6666CC>Erl&auml;uterung:</font></h4>

Mit <b>if</b> k&ouml;nnen Sie eine Wenn-Dann-Bedingung einleiten (<i>if = wenn</i>). Dahinter folgt, in Klammern stehend, die Formulierung der Bedingung. Um solche Bedingungen zu formulieren, brauchen Sie <img src="x3.gif" width=15 height=10 border=0>&nbsp;<a href="tecf.htm#a2"><b>Vergleichsoperatoren</b></a> f&uuml;r Zahlen oder Zeichenketten, oft auch <img src="x3.gif" width=15 height=10 border=0>&nbsp;<a href="tecb.htm"><b>Variablen</b></a> oder <img src="x3.gif" width=15 height=10 border=0>&nbsp;<a href="tecg.htm"><b>regul&auml;re Ausdr&uuml;cke</b></a>. 
<p>
Eine andere M&ouml;glichkeit, um eine Wenn-Dann-Bedingung zu formulieren, steht mit <b>unless</b> zur Verf&uuml;gung (<i>unless = wenn nicht</i>). Dabei gelten die gleichen Regeln wie bei <b>if</b>. Der Unterschied zu <b>if</b> besteht darin, da&szlig; bei <b>unless</b> nicht abgefragt wird, welche Bedingung erf&uuml;llt sein mu&szlig;, damit der davon abh&auml;ngige Programmcode ausgef&uuml;hrt wird, sondern welche Bedingung nicht erf&uuml;llt sein darf.
<p>
Wenn Sie mehrere Bedingungen in Reihe schalten wollen, sollten Sie f&uuml;r alle weiteren Bedingungen nach der ersten <b>if</b>/<b>unless</b>-Bedingung anstelle davon <b>elsif</b> verwenden (<i>elsif = oder wenn</i>). 
<p>
Mit <b>else</b> definieren Sie den Zweig Ihrer Abfrage, der ausgef&uuml;hrt werden soll, wenn die Bedingungen von <b>if</b>, <b>unless</b> oder <b>elsif</b> nicht zutreffen (<i>else = sonst</i>). Wenn Sie f&uuml;r diesen Fall keine Anweisungen brauchen, lassen Sie den else-Zweig einfach weg.

<h4><font color=#6666CC>Beachten Sie:</font></h4>
Alles, was innerhalb einer Verzweigung mit <b>if</b>, <b>unless</b>, <b>elsif</b> oder <b>else</b> steht, mu&szlig; in geschweifte Klammern eingeschlossen werden, auch, wenn es sich nur um eine einzige Anweisung handelt.



<p><a href="#top"><img src="xgoup2.gif" width=15 height=19 border=0></a><spacer type=vertical size=30>
<a name="a2"><h2><font color=#6666CC>Einfache Entweder-Oder-Abfrage</font></h2></a>

F&uuml;r einfache Entweder-Oder-Bedingungen gibt es eine spezielle Syntax, die Sie alternativ zur if/else-Anweisung verwenden k&ouml;nnen.

<h4><font color=#6666CC>Beispiel:</font></h4>
<table width=100% cellpadding=10><tr><td bgcolor=#FFFFCC>
<pre>
#!/usr/bin/perl

$Ergebnis = $ENV{'HTTP_USER_AGENT'} =~ /95/ ? &quot;Win 95/NT&quot; : &quot;kein Win 95/NT&quot;;
print &quot;Content-type: text/html\n\n&quot;; 
print &quot;&lt;html&gt;&lt;head&gt;&lt;title&gt;User&lt;/title&gt;&lt;/head&gt;\n&quot;;
print &quot;&lt;body&gt;\n&quot;;
print &quot;&lt;h1&gt;Sie haben &quot;, $Ergebnis, &quot;!&lt;/h1&gt;\n&quot;;
print &quot;&lt;/body&gt;&lt;/html&gt;\n&quot;;
exit(0);
</pre></td></tr></table><p>

<h4><font color=#6666CC>Erl&auml;uterung:</font></h4>
Eine einfache Entweder-Oder-Abrage wird mit einer Bedingung eingeleitet, im Beispiel <i>$ENV{'HTTP_USER_AGENT'} =~ /95/</i>. Dahinter wird ein Fragezeichen notiert. Hinter dem Fragezeichen wird ein Wert angegeben, der aktuell ist, wenn die Bedingung erf&uuml;llt ist. Dahinter folgt ein Doppelpunkt, und dahinter ein Wert f&uuml;r den Fall, da&szlig; die Bedingung nicht erf&uuml;llt ist. Da es sich um Werte handelt, die f&uuml;r die Weiterverarbeitung nur sinnvoll sind, wenn sie in einer Variablen gespeichert werden, wird einer solchen Entweder-Oder-Abrage in der Regel eine <img src="x3.gif" width=15 height=10 border=0>&nbsp;<a href="tecb.htm"><b>Variable</b></a> vorangestellt, im Beispiel der Skalar <i>$Ergebnis</i>. Der Variablen wird durch diese Art von Anweisung das Ergebnis der Entweder-Oder-Abrage zugewiesen.<br>
Um Bedingungen zu formulieren, brauchen Sie <img src="x3.gif" width=15 height=10 border=0>&nbsp;<a href="tecf.htm#a2"><b>Vergleichsoperatoren</b></a>.






<p><a href="#top"><img src="xgoup2.gif" width=15 height=19 border=0></a>
<p>
<hr noshade  size=4 width=50% align=left color=#6666CC>
<p>

<table>
<tr><td></td><td colspan=2 align=center><font size=-1>Bl&auml;ttern:</font></td><td></td></tr>
<tr>
<td><a href="tecc.htm"><b>Vordefinierte Variablen in Perl</b></a></td>
<td><img  src="x3.gif" width=15 height=10 border=0>&nbsp;<img  src="xgprev.gif" width=10 height=10 border=0></td>
<td align=right><img  src="xgnext.gif" width=10 height=10 border=0>&nbsp;<img  src="x3.gif" width=15 height=10 border=0></td>
<td><a href="tece.htm"><b>Schleifen und Sprungbefehle</b></a></td>
</tr>
</table>
<p>

<p>
<table>
<tr>
<td><img  src="x2.gif" width=16 height=13 border=0></td>
<td colspan=3><a href="selfhtml.htm"><b>HTML-Dateien selbst erstellen</b></a></td>
</tr>
<tr>
<td></td>
<td><img  src="x2.gif" width=16 height=13 border=0></td>
<td colspan=2><a href="te.htm"><b>Dokumentation: CGI/Perl</b></a></td>
</tr>
<tr>
<td></td>
<td></td>
<td><img  src="x2.gif" width=16 height=13 border=0></td>
<td><a href="tec.htm"><b>CGI und Perl: Perl Sprachelemente</b></a></td>
</tr>
</table>
<p>

<address>&copy; 1997 <img src="xgmail.gif" width=15 height=10 border=0>&nbsp;<a href="mailto:s.muenz@euromail.com">Stefan M&uuml;nz, s.muenz@euromail.com</a></address><p>

</body>
</html>

